# 1 Process Identifier
#include <unistd.h>

pid_t getpid(void);
pid_t getppid(void);
uid_t getuid(void);
uid_t geteuid(void);
gid_t getgid(void);
gid_t getegid(void);

# 2 fork
#include <unistd.h>
pid_t fork(void); # return 0 in child process, return id of child process in parent process

# 3 exec
execl
execv
execle
execve

# 4 change user id and group id
#include <unistd.h>
int setuid(uid_t);
int setgid(gid_t);

int setreuid(uid_t, uid_t);
int setregid(gid_t, gid_t);

int seteuid(uid_t);
int setegid(gid_t);

# 5 System
#include <stdlib.h>
int system(const char *cmdstring);

# 6 User Identification
#include <unistd.h>
char *getlogin(void);

# 7 Priority 
int nice(int)
int setpriority(int which, id_t who, int value);
int getpriority(int which, id_t who);
